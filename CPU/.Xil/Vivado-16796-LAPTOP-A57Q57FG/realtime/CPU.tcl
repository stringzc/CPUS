# 
# Synthesis run script generated by Vivado
# 

namespace eval rt {
    variable rc
}
set rt::rc [catch {
  uplevel #0 {
    set ::env(BUILTIN_SYNTH) true
    source $::env(HRT_TCL_PATH)/rtSynthPrep.tcl
    rt::HARTNDb_resetJobStats
    rt::HARTNDb_resetSystemStats
    rt::HARTNDb_startSystemStats
    rt::HARTNDb_startJobStats
    set rt::cmdEcho 0
    rt::set_parameter writeXmsg true
    rt::set_parameter enableParallelHelperSpawn true
    set ::env(RT_TMP) "C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/.Xil/Vivado-16796-LAPTOP-A57Q57FG/realtime/tmp"
    if { [ info exists ::env(RT_TMP) ] } {
      file delete -force $::env(RT_TMP)
      file mkdir $::env(RT_TMP)
    }

    rt::delete_design

    rt::set_parameter datapathDensePacking false
    set rt::partid xc7a100tfgg484-1
     file delete -force synth_hints.os

    set rt::multiChipSynthesisFlow false
    source $::env(SYNTH_COMMON)/common.tcl
    set rt::defaultWorkLibName xil_defaultlib

    set rt::useElabCache false
    if {$rt::useElabCache == false} {
      rt::read_verilog {
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/A.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/ALU.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/ALUOut.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/B.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/Ctrl.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/D.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/DEBUG.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/DM.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/DR.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/EXT.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/Flopr.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/IM.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/IR.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/NPC.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/PC.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/RF.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/mux.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/muxData.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/muxDes.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/muxSource.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/next_state.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/signal_out.v
      C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/CPU.srcs/sources_1/new/CPU.v
    }
      rt::filesetChecksum
    }
    rt::set_parameter usePostFindUniquification false
    set rt::top CPU
    rt::set_parameter enableIncremental true
    rt::set_parameter markDebugPreservationLevel "enable"
    set rt::reportTiming false
    rt::set_parameter elaborateOnly true
    rt::set_parameter elaborateRtl true
    rt::set_parameter eliminateRedundantBitOperator false
    rt::set_parameter elaborateRtlOnlyFlow true
    rt::set_parameter writeBlackboxInterface true
    rt::set_parameter merge_flipflops true
    rt::set_parameter srlDepthThreshold 3
    rt::set_parameter rstSrlDepthThreshold 4
# MODE: 
    rt::set_parameter webTalkPath {}
    rt::set_parameter synthDebugLog false
    rt::set_parameter printModuleName false
    rt::set_parameter enableSplitFlowPath "C:/Users/¡ı–¿ﬁ»/Desktop/CPU/CPU/CPU/.Xil/Vivado-16796-LAPTOP-A57Q57FG/"
    set ok_to_delete_rt_tmp true 
    if { [rt::get_parameter parallelDebug] } { 
       set ok_to_delete_rt_tmp false 
    } 
    if {$rt::useElabCache == false} {
        set oldMIITMVal [rt::get_parameter maxInputIncreaseToMerge]; rt::set_parameter maxInputIncreaseToMerge 1000
        set oldCDPCRL [rt::get_parameter createDfgPartConstrRecurLimit]; rt::set_parameter createDfgPartConstrRecurLimit 1
        $rt::db readXRFFile
      rt::run_rtlelab -module $rt::top
        rt::set_parameter maxInputIncreaseToMerge $oldMIITMVal
        rt::set_parameter createDfgPartConstrRecurLimit $oldCDPCRL
    }

    set rt::flowresult [ source $::env(SYNTH_COMMON)/flow.tcl ]
    rt::HARTNDb_stopJobStats
    if { $rt::flowresult == 1 } { return -code error }


  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] } { 
     $rt::db killSynthHelper $hsKey
  } 
  rt::set_parameter helper_shm_key "" 
    if { [ info exists ::env(RT_TMP) ] } {
      if { [info exists ok_to_delete_rt_tmp] && $ok_to_delete_rt_tmp } { 
        file delete -force $::env(RT_TMP)
      }
    }

    source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  } ; #end uplevel
} rt::result]

if { $rt::rc } {
  $rt::db resetHdlParse
  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] } { 
     $rt::db killSynthHelper $hsKey
  } 
  source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  return -code "error" $rt::result
}
